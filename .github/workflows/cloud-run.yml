# Github Actions workflow for building the Docker image and deploying to Google
# Cloud Run. Includes option for test-building without deployment.

# Copyright 2024 Qi Tianshi. All rights reserved.


name: Build and Deploy

on:

  push:
    branches:
      - main

  pull_request:

  workflow_dispatch:
    inputs:
      no_deploy:
        description: 'Build without deploying'
        type: boolean
        default: false

env:
  DOCKER_TAG: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_GAR_REPO }}/${{ vars.GCP_GCR_SERVICE }}:${{ github.sha }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      # Checkout with duty-rooster-core submodule.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.DRCORE_GITHUB_TOKEN }}

      # Sets up Docker Buildx, enables build caching.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Builds the Docker image without pushing.
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.DOCKER_TAG }}
          load: true
          outputs: type=docker,dest=/tmp/duty-rooster-image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Uploads artifact for use in deploy job.
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: duty-rooster-image
          path: /tmp/duty-rooster-image.tar
          retention-days: 1

  deploy:

    # This step is not run if the workflow was triggered by a pull request, or
    # workflow dispatch with `no_deploy` set to `true`.
    if: ${{ !(github.event_name == 'pull_request' || github.event.inputs.no_deploy) }}

    runs-on: ubuntu-latest

    # Ensures build is successful before deploying.
    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    # Disallows concurrent deployments.
    concurrency:
      group: 'deploy-cloud-run'
      cancel-in-progress: true

    steps:

      # Downloads artifact from build job.
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: duty-rooster-image
          path: /tmp

      # Authenticates GCP using Workload Identity Federation.
      - name: Authenticate Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.GCP_WIF_SERVICE_ACCOUNT }}
          token_format: 'access_token'

      # Authenticates Docker to Artifact Registry.
      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.GCP_REGION }}-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: ${{ steps.gcp-auth.outputs.access_token }}

      # Pushes the Docker image from the build job to Artifact Registry.
      - name: Push Docker image
        run: |
          docker load --input /tmp/duty-rooster-image.tar
          docker push ${{ env.DOCKER_TAG }}

      # Deploys the image from Artifact Registry to Cloud Run.
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_GCR_SERVICE }}
          region: ${{ vars.GCP_REGION }}
          image: ${{ env.DOCKER_TAG }}
